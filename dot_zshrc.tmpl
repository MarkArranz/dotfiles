# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi


###########
# OH-MY-ZSH
###########

ZSH_THEME="powerlevel10k/powerlevel10k"

# _ and - will be interchangeable.
HYPHEN_INSENSITIVE="true"

# Handle omz updates using chezmoi settings in .chezmoiexternal:
zstyle ':omz:update' mode disabled

plugins=(
  aliases
  {{ if eq .chezmoi.os "darwin" -}}
  brew
  {{- end }}
  direnv
  docker
  docker-compose
  git
  golang
  zsh-syntax-highlighting
)

# zsh-completions (optimized approach)
fpath+=${ZSH_CUSTOM:-${ZSH:-~/.oh-my-zsh}/custom}/plugins/zsh-completions/src
autoload -U compinit && compinit

#########
# SOURCES
#########

# oh-my-zsh:
[[ ! -f ~/.oh-my-zsh/oh-my-zsh.sh ]] || source $ZSH/oh-my-zsh.sh

# powerlevel10k:
# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# Set up fzf key bindings and fuzzy completion
source <(fzf --zsh)

{{ if .forWork -}}
{{- onepasswordRead "op://Employee/zshrc/env_vars" -}}
{{- else }}

# uv & uvx:
eval "$(uv generate-shell-completion zsh)"
eval "$(uvx --generate-shell-completion zsh)"

{{ if eq .chezmoi.os "linux" -}}

## START: HYPRPANEL DEPENDENCIES
# bun completions:
[ -s "/home/mark/.bun/_bun" ] && source "/home/mark/.bun/_bun"

# bun:
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"
## END: HYPRPANEL DEPENDENCIES

# node-version-manager:
[[ ! -f /usr/share/nvm/init-nvm.sh ]] || source /usr/share/nvm/init-nvm.sh

# uv
export PATH="/home/mark/.local/share/../bin:$PATH"

# go install bin:
export PATH="$PATH:$(go env GOBIN):$(go env GOPATH)/bin"

# texlive:
export PATH="/usr/local/texlive/2025/bin/x86_64-linux:$PATH"

{{- else if eq .chezmoi.os "darwin" -}}

# Use python installed from website:
export PATH="/Library/Frameworks/Python.framework/Versions/3.13/bin:${PATH}"

# uv & uvx:
export PATH="$HOME/.local/bin:$PATH"

# node-version-manager:
export NVM_DIR="$HOME/.nvm"
[ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"
# This loads nvm bash_completion
[ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"

# have postgresql@17 first in PATH
export PATH="/opt/homebrew/opt/postgresql@17/bin:$PATH"
export LDFLAGS="-L/opt/homebrew/opt/postgresql@17/lib"
export CPPFLAGS="-I/opt/homebrew/opt/postgresql@17/include"

{{- end }}
{{- end }}

#########
# ALIASES
#########

# Use eza instead of ls:
alias ls=eza

# Use zoxide instead of cd:
alias cd=z

# Find where aliases are declared:
alias which-alias="PS4='+%x:%I>' zsh -i -x -c '' |& grep "

# Use kitten ssh:
alias s="kitten ssh"

# Use kitty for git diff
alias kdiff="git difftool --no-symlinks --dir-diff"

# Git fetch prune all subdirectories
alias gfpr="find . -maxdepth 1 -mindepth 1 -type d -exec sh -c 'cd \"{}\" && pwd && git fetch --all --tags --prune --jobs=10' \;"
# Git pull all subdirectories
alias glr="find . -maxdepth 1 -mindepth 1 -type d -exec sh -c 'cd \"{}\" && pwd && git pull' \;"

{{ if eq .chezmoi.os "linux" -}}

# Edit hyprland conf file
alias hyprconf="nvim ~/.config/hypr/hyprland.conf"

{{- end -}}


# #####
# FINAL
# #####

# zoxide
eval "$(zoxide init zsh)"
