{{- /* Determine computer form factor: */}}
{{- $chassisType := "desktop" }}
{{- if eq .chezmoi.os "darwin" }}
{{-   if contains "MacBook" (output "sysctl" "-n" "hw.model") }}
{{-     $chassisType = "laptop" }}
{{-   else }}
{{-     $chassisType = "desktop" }}
{{-   end }}
{{- else if eq .chezmoi.os "linux" }}
{{-   $chassisType = (output "hostnamectl" "--json=short" | mustFromJson).Chassis }}
{{- else if eq .chezmoi.os "windows" }}
{{-   $chassisType = (output "powershell.exe" "-NoProfile" "-NonInteractive" "-Command" "if ((Get-CimInstance -Class Win32_Battery | Measure-Object).Count -gt 0) { Write-Output 'laptop' } else { Write-Output 'desktop' }") | trim }}
{{- end -}}

###################
### COLOR THEME ###
###################

source = $HOME/.config/hypr/themes/catppuccin/themes/mocha.conf


################
### MONITORS ###
################

{{ if eq $chassisType "laptop" -}}
  source = $HOME/.config/hypr/local/laptop.local.conf
{{- end }}


###################
### MY PROGRAMS ###
###################

$terminal = kitty
$fileManager = thunar
$menu = rofi -show combi
$browser = firefox


#################
### AUTOSTART ###
#################

# Autostart necessary processes (like notifications daemons, status bars, etc.)
# Or execute your favorite apps at launch like this:

exec-once = systemctl --user enable --now hyprpolkitagent
exec-once = uwsm app -- hyprpaper
exec-once = uwsm app -- hyprpanel
exec-once = uwsm app -- clipse -listen


#############################
### ENVIRONMENT VARIABLES ###
#############################



#####################
### LOOK AND FEEL ###
#####################

general { 
    gaps_in = 0
    gaps_out = 0

    border_size = 2

    # https://wiki.hyprland.org/Configuring/Variables/#variable-types for info about colors
    col.active_border = $pink $sky 45deg
    col.inactive_border = $mantle

    # Set to true enable resizing windows by clicking and dragging on borders and gaps
    resize_on_border = true

    # Please see https://wiki.hyprland.org/Configuring/Tearing/ before you turn this on
    allow_tearing = false

    layout = dwindle
}

decoration {
    rounding = 5

    # Change transparency of focused and unfocused windows
    # active_opacity = 1.0
    # inactive_opacity = 1.0

    blur {
        # Laptop efficieny setting
        enabled = false
        size = 3
        passes = 1

        vibrancy = 0.1696
    }

    shadow {
      # Laptop efficieny setting
      enabled = false
    }

}

# https://wiki.hyprland.org/Configuring/Variables/#animations
animations {
    enabled = true

    # Default animations, see https://wiki.hyprland.org/Configuring/Animations/ for more

    bezier = myBezier, 0.05, 0.9, 0.1, 1.05

    animation = windows, 1, 7, myBezier
    animation = windowsOut, 1, 7, default, popin 80%
    animation = border, 1, 10, default
    animation = borderangle, 1, 8, default
    animation = fade, 1, 7, default
    animation = workspaces, 1, 6, default
}

dwindle {
    # Master switch for pseudotiling. Enabling is bound to mainMod + P in the keybinds section below
    pseudotile = true
    # You probably want this
    preserve_split = true
}

master {
    new_status = master
}

misc { 
    disable_hyprland_logo = true
    # Laptop efficieny setting - lower the amount of sent frames when nothing is happening
    # on-screen:
    vfr = true
}


#############
### INPUT ###
#############

input {
    kb_layout = us
    kb_variant =
    kb_model =
    kb_options =
    kb_rules =

    follow_mouse = 1

    sensitivity = 0 # -1.0 - 1.0, 0 means no modification.

    touchpad {
        natural_scroll = true
        scroll_factor = 0.8
    }
}

gestures {
    workspace_swipe = true
    workspace_swipe_fingers = 4
}


####################
### KEYBINDINGSS ###
####################

$mainMod = SUPER

## LAUNCHING & CLOSING ##
# Open new terminal window:
bind = $mainMod, Return, exec, uwsm app -- $terminal
# Open launcher:
bind = $mainMod, Space, exec, uwsm app -- $menu
# Open clipboard history:
bind = $mainMod, v, exec, uwsm app -- $terminal --class clipse -e 'clipse'
# Open file manager:
bind = $mainMod, e, exec, uwsm app -- $fileManager
# Close window:
bind = $mainMod, q, killactive,
# Exit session:
bind = $mainMod, m, exec, uwsm stop

## WINDOW & FOCUS CONTROLS ##
bind = $mainMod, f, fullscreen,
bind = $mainMod SHIFT, f, togglefloating,
bind = $mainMod, t, togglesplit, # dwindle

# Move focus with mainMod + vim motions
bind = $mainMod, h, movefocus, l
bind = $mainMod, j, movefocus, d
bind = $mainMod, k, movefocus, u
bind = $mainMod, l, movefocus, r

# Move window with mainMod + Shift + vim motions
bind = $mainMod SHIFT, h, movewindow, l
bind = $mainMod SHIFT, j, movewindow, d
bind = $mainMod SHIFT, k, movewindow, u
bind = $mainMod SHIFT, l, movewindow, r

# Switch workspaces with mainMod + Alt + vim motions
bind = $mainMod ALT, h, workspace, -1
bind = $mainMod ALT, l, workspace, +1

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# Special workspace (scratchpad)
bind = $mainMod, s, togglespecialworkspace, magic
bind = $mainMod SHIFT, s, movetoworkspace, special:magic

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

## SCREEN BRIGHTNESS ##
binde = , XF86MonBrightnessUp, exec, brightnessctl set +5%
binde = , XF86MonBrightnessDown, exec, brightnessctl set 5%-
binde = SHIFT, XF86MonBrightnessUp, exec, brightnessctl set +1%
binde = SHIFT, XF86MonBrightnessDown, exec, brightnessctl set 1%-

## KEYBOARD BRIGHTNESS ##
binde = , XF86KbdBrightnessUp, exec, brightnessctl --device='smc::kbd_backlight' set +10%
binde = , XF86KbdBrightnessDown, exec, brightnessctl --device='smc::kbd_backlight' set 10%-
binde = SHIFT, XF86KbdBrightnessUp, exec, brightnessctl --device='smc::kbd_backlight' set +5%
binde = SHIFT, XF86KbdBrightnessDown, exec, brightnessctl --device='smc::kbd_backlight' set 5%-

## VOLUME AND MEDIA CONTROL ##
binde = , XF86AudioRaiseVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+
binde = , XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
binde = , XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
binde = $mainMod, XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle
binde = , XF86AudioPlay, exec, playerctl play-pause
binde = , XF86AudioPause, exec, playerctl play-pause
binde = , XF86AudioNext, exec, playerctl next
binde = , XF86AudioPrev, exec, playerctl previous

## SCREENSHOTS ##

# The key pressed determines **HOW** you want to capture a screenshot:
#   XF86LaunchA (Fn+F3): Manually select a rectangular region or window (by clicking on it)
#   XF86LaunchB (Fn+F4): Captures the currently active output
#
# Use modifier keys to change **WHERE** the screenshot data goes:
#   <Default>: Copy the screenshot data into the clipboard
#   SHIFT: Save the screenshot into a regular file
#   SUPER: Copy AND Save
#   ALT: Open the screenshot in an image editor.

# Selection screenshot:
bind = , XF86LaunchA, exec, grimblast copy area
bind = SHIFT, XF86LaunchA, exec, grimblast save area
bind = SUPER, XF86LaunchA, exec, grimblast copysave area
bind = ALT, XF86LaunchA, exec, grimblast edit area

# Full screen screenshot:
bind = , XF86LaunchB, exec, grimblast copy output
bind = SHIFT, XF86LaunchB, exec, grimblast save output
bind = SUPER, XF86LaunchB, exec, grimblast copysave output
bind = ALT, XF86LaunchB, exec, grimblast edit output


##################################
### WINDOW AND WORKSPACE RULES ###
##################################

windowrulev2 = suppressevent maximize, class:.* # You'll probably like this.

# Clipse:
windowrulev2 = float,class:(clipse) # ensure you have a floating window class set if you want this behavior
windowrulev2 = size 622 652,class:(clipse) # set the size of the window as necessary

# Bitwarden:
windowrulev2 = float,class:(Bitwarden)
windowrulev2 = size 900 600,class:(Bitwarden) # set the size of the window as necessary
